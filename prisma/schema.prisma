// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String    @id
  ci        String    @unique
  username  String    @unique
  password  String
  firstName String
  lastName  String
  role      Role      @default(USER)
  office_id String
  messages  Message[]

  @@map("user")
}

model Office {
  id    String       @id
  abrev String
  name  String
  memos MemoOffice[]

  @@map("offices")
}

model Memo {
  id               String   @id
  name             String
  applicant        String
  reception_method String
  instruction      String
  response_require String
  urgency          String?
  observation      String
  reception_date   DateTime @db.Date
  reception_hour   String
  attachment       Json
  status           String   @default("PENDING")
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now()) @updatedAt

  offices MemoOffice[]
  forums  Forum[]

  @@map("memos")
}

enum ForumStatus {
  OPEN
  CLOSED
}

model Forum {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  memo_id     String
  status      ForumStatus @default(OPEN)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt @default(now())
  messages    Message[]

  memo Memo @relation(fields: [memo_id], references: [id])

  @@map("forums")
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  user_id   String // Change this to String to match User.id
  forum_id  Int
  fileUrl   String?  // Add these
  fileName  String?  // new fields

  user  User  @relation(fields: [user_id], references: [id])
  forum Forum @relation(fields: [forum_id], references: [id])

  @@map("messages")
}

model MemoOffice {
  memo_id   String
  office_id String

  memo   Memo   @relation(fields: [memo_id], references: [id])
  office Office @relation(fields: [office_id], references: [id])

  @@id([memo_id, office_id])
  @@map("memos_offices")
}
